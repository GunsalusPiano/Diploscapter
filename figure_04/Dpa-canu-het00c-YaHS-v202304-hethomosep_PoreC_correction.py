################################################################################
# Dpa-canu-het00c-YaHS-v202304-hethomosep_PoreC_correction.py
# 
# Because the homozygous region of Dpachys gets 2x the number of reads,
# PCA doesn't seem to be working... PCA is required to pick out the boundaries
# of what appear to be past chromosome fusions.
#
# This script will use the .pairs file generated by PoreC, and whenver there is
# a read mapping to "scaffold_hom", randomly assign it to either the same region
# on "scaffold_1" or "scaffold_2" - because, in reality, you won't be able to 
# tell which scaffold it comes from.
#
################################################################################

import random

def main():
	old_pairs_filename = "NlaIII_run01_Dpa-canu-het00c-YaHS-v202304-hethomosep_unphased.unsorted.pairs"
	new_pairs_filename = "Dpa-canu-het00c-YaHS-v202304.pairs"
	
	with open(old_pairs_filename, "r") as old_pairs_fh, open(new_pairs_filename, "w") as new_pairs_fh:
		
		# the old pairs file opens with six lines
		old_pairs_fh.readline()
		old_pairs_fh.readline()
		old_pairs_fh.readline()
		old_pairs_fh.readline()
		old_pairs_fh.readline()
		old_pairs_fh.readline()
		
		# re-write the lines in new_pairs file
		new_pairs_fh.write("## pairs format 1.0\n")
		new_pairs_fh.write("#shape: upper triangle\n")
		new_pairs_fh.write("#chromsize: scaffold_1 85103150\n")
		new_pairs_fh.write("#chromsize: scaffold_2 88703182\n")
		new_pairs_fh.write("#columns: readID chr1 pos1 chr2 pos2 strand1 strand2 pair_type align1_idx align2_idx distance_on_read\n")
		
		# now read line from the old pairs file and change the lines to write into the new pairs file
		line = old_pairs_fh.readline()
		
		scaffold_name_dict = {"scaffold_1_het": "scaffold_1", "scaffold_2_het": "scaffold_2"}
		
		while line:
			line_items = line.split()
			
			# capture the chr1 information and change the name and coordinates accordingly
			if line_items[1] == "scaffold_hom":
				
				# if it's the homozygous scaffold, randomly assign one scaffold to line_items[1]
				line_items[1] = random.choice(["scaffold_1", "scaffold_2"])
				
			else:
				# if it's "scaffold_1_het" or "scaffold_2_het"
				# the coordinate will be + 17839851
				
				line_items[2] = str(int(line_items[2]) + 17839851)
				
				# change the name to without the '_het'
				line_items[1] = scaffold_name_dict[line_items[1]]
				
			# capture the chr2 information and change the name and coordinates accordingly
			if line_items[3] == "scaffold_hom":
			
				# if it's the homozygous scaffold, randomly assign one scaffold to line_items[1]
				line_items[3] = random.choice(["scaffold_1", "scaffold_2"])
			
			else:
				# if it's "scaffold_1_het" or "scaffold_2_het"
				# the coordinate will be + 17839851
				
				line_items[4] = str(int(line_items[4]) + 17839851)
				
				# change the name to without the '_het'
				# print(scaffold_name_dict(line_items[3]))
				line_items[3] = scaffold_name_dict[line_items[3]]
				
			# write the new line to new pairs file
			new_pairs_fh.write("\t".join(line_items)+"\n")
			
			line = old_pairs_fh.readline()

if __name__ == "__main__":
	main()